(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{408:function(t,e,a){"use strict";a.r(e);var r=a(56),o=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"android-常用依赖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#android-常用依赖"}},[t._v("#")]),t._v(" Android 常用依赖")]),t._v(" "),a("h2",{attrs:{id:"gradle的依赖引入方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gradle的依赖引入方式"}},[t._v("#")]),t._v(" Gradle的依赖引入方式")]),t._v(" "),a("p",[t._v("Gradle 新老版本关键字")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("4.x+版本配置")]),t._v(" "),a("th",[t._v("已弃用配置")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("api")]),t._v(" "),a("td",[t._v("compile")])]),t._v(" "),a("tr",[a("td",[t._v("implementation")]),t._v(" "),a("td",[t._v("compile")])]),t._v(" "),a("tr",[a("td",[t._v("compileOnly")]),t._v(" "),a("td",[t._v("provided")])]),t._v(" "),a("tr",[a("td",[t._v("runtimeOnly")]),t._v(" "),a("td",[t._v("apk")])]),t._v(" "),a("tr",[a("td",[t._v("testImplementation")]),t._v(" "),a("td",[t._v("testCompile")])]),t._v(" "),a("tr",[a("td",[t._v("androidTestImplementation")]),t._v(" "),a("td",[t._v("androidTestCompile")])]),t._v(" "),a("tr",[a("td",[t._v("debugImplementation")]),t._v(" "),a("td",[t._v("debugCompile")])]),t._v(" "),a("tr",[a("td",[t._v("releaseImplementation")]),t._v(" "),a("td",[t._v("releaseCompile")])])])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("api")])])]),t._v(" "),a("blockquote",[a("p",[t._v("与compile对应，功能完全一样，会添加依赖到编译路径，并且会将依赖打包到输出（aar或apk），与implementation不同，这个依赖可以传递，其他module无论在编译时和运行时都可以访问这个依赖的实现，也就是会泄漏一些不应该不使用的实现。举个例子，A依赖B，B依赖C，如果都是使用api配置的话，A可以直接使用C中的类（编译时和运行时），而如果是使用implementation配置的话，在编译时，A是无法访问C中的类的。")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("implementation")])])]),t._v(" "),a("blockquote",[a("p",[t._v("与compile对应，会添加依赖到编译路径，并且会将依赖打包到输出（aar或apk），但是"),a("strong",[t._v("在编译时不会将依赖的实现暴露给其他module")]),t._v("，也就是只有在运行时其他module才能访问这个依赖中的实现;")])]),t._v(" "),a("blockquote",[a("p",[t._v("简单的说，就是使用implementation指令的依赖不会传递;")])]),t._v(" "),a("blockquote",[a("p",[t._v("使用这个配置，可以显著提升构建时间，因为它可以减少重新编译的module的数量。Google建议尽量使用这个依赖配置;")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("compileOnly")])])]),t._v(" "),a("blockquote",[a("p",[t._v("与provided对应，Gradle把依赖加到编译路径，编译时使用，不会打包到输出（aar或apk）。这可以减少输出的体积，在只在编译时需要，在运行时可选的情况，很有用")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("apk")])])]),t._v(" "),a("blockquote",[a("p",[t._v("只在生成apk的时候参与打包，编译时不会参与，很少用。")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("testImplementation")])])]),t._v(" "),a("blockquote",[a("p",[t._v("只在单元测试代码的编译以及最终打包测试apk时有效。")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("androidTestImplementation")])])]),t._v(" "),a("blockquote",[a("p",[t._v("只在Android相关单元测试代码的编译以及最终打包测试apk时有效。")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("debugImplementation")])])]),t._v(" "),a("blockquote",[a("p",[t._v("只在 debug 模式的编译和最终的 debug apk 打包时有效")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("releaseImplementation")])])]),t._v(" "),a("blockquote",[a("p",[t._v("仅仅针对 Release 模式的编译和最终的 Release apk 打包。")])]),t._v(" "),a("p",[t._v("排除引用")]),t._v(" "),a("p",[t._v("有时候为了解决引入的冲突，需要在引入远端包的同时排除这些包的某几个依赖")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("dependencies {\n    implementation ('com.github.bumptech.glide:glide:4.9.0'){\n        exclude group:'com.android.support', module: 'support-fragment'\n        exclude group:'com.android.support', module: 'support-core-ui'\n        exclude group:'com.android.support', module: 'support-compat'\n        exclude group:'com.android.support', module: 'support-annotations'\n    }\n}\n")])])]),a("h2",{attrs:{id:"网络"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络"}},[t._v("#")]),t._v(" 网络")]),t._v(" "),a("h3",{attrs:{id:"okhttp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#okhttp"}},[t._v("#")]),t._v(" OkHttp")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("implementation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"com.squareup.okhttp3:okhttp:4.9.3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"retrofit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#retrofit"}},[t._v("#")]),t._v(" Retrofit")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" retrofit_version "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"2.9.0"')]),t._v("\n    implementation "),a("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"com.squareup.retrofit2:retrofit:'),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),t._v("retrofit_version")]),t._v('"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("implementation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string gstring"}},[t._v('"com.squareup.retrofit2:converter-gson:'),a("span",{pre:!0,attrs:{class:"token expression"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("$")]),t._v("retrofit_version")]),t._v('"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);e.default=o.exports}}]);